{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "92d19dac",
   "metadata": {},
   "source": [
    "# Линейная регрессия на датасете Boston Housing\n",
    "Этот ноутбук содержит решение задачи линейной регрессии с использованием датасета Boston Housing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5534cb26",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "\n",
    "# Загружаем датасет\n",
    "data_path = \"boston.csv\"\n",
    "df = pd.read_csv(data_path)\n",
    "\n",
    "# Выводим первые строки датасета\n",
    "print(\"Первые 5 строк датасета:\")\n",
    "print(df.head())\n",
    "\n",
    "# Разделение данных на признаки (X) и целевую переменную (y)\n",
    "X = df.drop(columns=['MEDV'])  # Все столбцы, кроме MEDV\n",
    "y = df['MEDV']  # Целевая переменная\n",
    "\n",
    "# Разделение на обучающую и тестовую выборки\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Инициализация и обучение модели линейной регрессии\n",
    "model = LinearRegression()\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Предсказания модели\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "# Оценка качества модели\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "\n",
    "print(f'Среднеквадратичная ошибка (MSE): {mse}')\n",
    "print(f'Коэффициент детерминации (R^2): {r2}')\n",
    "\n",
    "# Визуализация реальных и предсказанных значений\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.scatterplot(x=y_test, y=y_pred)\n",
    "plt.xlabel(\"Реальные значения\")\n",
    "plt.ylabel(\"Предсказанные значения\")\n",
    "plt.title(\"Сравнение реальных и предсказанных значений\")\n",
    "plt.show()\n",
    "\n",
    "# Вывод коэффициентов модели\n",
    "coefficients = pd.DataFrame(model.coef_, X.columns, columns=['Коэффициент'])\n",
    "print(\"Коэффициенты модели:\")\n",
    "print(coefficients)\n"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}
